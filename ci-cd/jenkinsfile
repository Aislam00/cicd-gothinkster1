pipeline {
    agent any
    
    tools {
        nodejs '18'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                dir('app') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Setup Test Database') {
            steps {
                dir('app') {
                    sh 'echo "DATABASE_URL=\\"file:./test.db\\"" > .env'
                    sh 'echo "JWT_SECRET=\\"test-secret-key\\"" >> .env'
                    sh 'npx prisma generate'
                    sh 'npx prisma db push'
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                dir('app') {
                    sh 'npm test'
                }
            }
        }
        
        stage('Build Docker Image') {
            when {
                expression { return false }  // Skip for now since tests are failing
            }
            steps {
                dir('app') {
                    sh 'docker build -t realworld-api:${BUILD_NUMBER} .'
                }
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
