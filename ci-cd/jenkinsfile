pipeline {
   agent any
   
   tools {
       nodejs '18'
   }
   
   stages {
       stage('Checkout') {
           steps {
               echo 'Checking out code...'
               checkout scm
           }
       }
       
       stage('Install Dependencies') {
           steps {
               dir('app') {
                   sh 'npm install'
               }
           }
       }
       
       stage('Setup Test Database') {
           steps {
               dir('app') {
                   sh 'echo "DATABASE_URL=\\"file:./test.db\\"" > .env'
                   sh 'echo "JWT_SECRET=\\"test-secret-key\\"" >> .env'
                   sh 'npx prisma generate'
                   sh 'npx prisma db push'
               }
           }
       }
       
       stage('Run Tests') {
           steps {
               dir('app') {
                   script {
                       try {
                           sh 'npm test'
                       } catch (Exception e) {
                           echo 'Some tests failed, continuing pipeline'
                           currentBuild.result = 'UNSTABLE'
                       }
                   }
               }
           }
       }
       
       stage('Build Docker Image') {
           steps {
               dir('app') {
                   sh 'docker build -t realworld-api:${BUILD_NUMBER} .'
                   echo 'Docker image built'
               }
           }
       }
       
       stage('Deploy') {
           steps {
               echo 'Deploying to dev environment'
               echo 'Pipeline completed'
           }
       }
   }
   
   post {
       always {
           echo 'Build finished'
       }
       success {
           echo 'Pipeline succeeded'
       }
       unstable {
           echo 'Pipeline completed with warnings'
       }
       failure {
           echo 'Pipeline failed'
       }
   }
}

